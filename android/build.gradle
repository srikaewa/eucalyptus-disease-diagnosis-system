buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        /**********************************************
         *   Google Firebase   ************************
         **********************************************/
        classpath 'com.google.gms:google-services:3.1.0'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.application'

project.ext {
  // Configure the Firebase C++ SDK location.
  firebase_cpp_sdk_dir = System.getProperty('firebase_cpp_sdk.dir')
  if (firebase_cpp_sdk_dir == null || firebase_cpp_sdk_dir.isEmpty()) {
    firebase_cpp_sdk_dir = System.getenv('FIREBASE_CPP_SDK_DIR')
    if (firebase_cpp_sdk_dir == null || firebase_cpp_sdk_dir.isEmpty()) {
      if ((new File('firebase_cpp_sdk')).exists()) {
        firebase_cpp_sdk_dir = 'firebase_cpp_sdk'
      } else {
        throw new StopActionException(
          'firebase_cpp_sdk.dir property or the FIREBASE_CPP_SDK_DIR ' +
          'environment variable must be set to reference the Firebase C++ ' +
          'SDK install directory.  This is used to configure static library ' +
          'and C/C++ include paths for the SDK.')
      }
    }
  }
  if (!(new File(firebase_cpp_sdk_dir)).exists()) {
    throw new StopActionException(
      sprintf('Firebase C++ SDK directory %s does not exist',
              firebase_cpp_sdk_dir))
  }
  // Check the NDK location using the same configuration options as the
  // experimental Gradle plug-in.
  ndk_dir = project.android.ndkDirectory
  if (ndk_dir == null || !ndk_dir.exists()) {
    ndk_dir = System.getenv('ANDROID_NDK_HOME')
    if (ndk_dir == null || ndk_dir.isEmpty()) {
      throw new StopActionException(
        'Android NDK directory should be specified using the ndk.dir ' +
        'property or ANDROID_NDK_HOME environment variable.')
    }
  }
}


android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion androidBuildToolsVersion

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
       }
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        applicationId "ai.suntrust.edds"
        minSdkVersion 22
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    /**********************************************
     *   Google Firebase   ************************
     **********************************************/
    compile 'com.google.firebase:firebase-auth:11.0.2'
    compile 'com.google.android.gms:play-services-base:11.0.2'
}

apply plugin: 'com.google.gms.google-services'

